{"version":3,"sources":["logo.svg","actions/types.js","assets/skateboarding.gif","assets/svg/calendar.svg","assets/svg/user.svg","assets/svg/locked.svg","assets/svg/call.svg","assets/svg/map-location.svg","assets/svg/email.svg","components/userCard.js","actions/appActions.js","App.js","reportWebVitals.js","reducers/appReducer.js","reducers/index.js","store.js","index.js"],"names":["GET_RANDOM_USER","APP_LAYOUT_ERROR","UserCard","appState","useSelector","state","app","dispatch","useDispatch","randomUser","loading","useState","subtitle","setSubtitle","details","setDetails","updateDetails","heading","value","useEffect","a","axios","get","response","console","log","data","results","type","payload","className","src","SkateboardIcon","alt","picture","large","name","first","last","onMouseEnter","UserIcon","email","EmailIcon","Date","dob","date","toLocaleDateString","CalendarIcon","location","street","number","MapIcon","cell","CallIcon","login","password","LockIcon","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","error","reducer","action","combineReducers","appReducer","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","Home","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.abbc6709.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","export const GET_RANDOM_USER = 'GET_RANDOM_USER';\nexport const APP_LAYOUT_ERROR = 'APP_LAYOUT_ERROR';","export default __webpack_public_path__ + \"static/media/skateboarding.b53f1c75.gif\";","export default __webpack_public_path__ + \"static/media/calendar.70fb7ba1.svg\";","export default __webpack_public_path__ + \"static/media/user.f666db6d.svg\";","export default __webpack_public_path__ + \"static/media/locked.2723848f.svg\";","export default __webpack_public_path__ + \"static/media/call.87e25d47.svg\";","export default __webpack_public_path__ + \"static/media/map-location.e6608e14.svg\";","export default __webpack_public_path__ + \"static/media/email.4a680946.svg\";","import React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux'\nimport { getRandomUser } from '../actions/appActions'\nimport SkateboardIcon from './../assets/skateboarding.gif'\nimport CalendarIcon from './../assets/svg/calendar.svg'\nimport UserIcon from './../assets/svg/user.svg'\nimport LockIcon from './../assets/svg/locked.svg'\nimport CallIcon from './../assets/svg/call.svg'\nimport MapIcon from './../assets/svg/map-location.svg'\nimport EmailIcon from './../assets/svg/email.svg'\n\n// import './UserCard.scss'\n\n\nconst UserCard = () => {\n  const appState = useSelector(state => state.app);\n  const dispatch = useDispatch();\n  const { randomUser, loading }  = appState;\n\n  // variables for the info that is displayed on icon hover\n  const [subtitle, setSubtitle] = useState('');\n  const [details, setDetails] = useState('');\n\n  // Updates the details displayed under avatar\n  function updateDetails(heading, value){\n      setSubtitle(heading);\n      setDetails(value);\n  }\n\n  // get user from randomUser API\n  useEffect(() => {\n    dispatch(getRandomUser());\n  },[dispatch]);\n\n  // return if user not loaded\n  if (loading) {\n    return(\n    <div className='l-container u-padding--none u-margin--tp-sm'>\n          <div className='u-content--center'>\n            <div className='c-card u-text--centered'>\n              <div className='c-card__content u-padding--none u-border--none'>\n                <div className='c-card__header u-border--bottom'>\n                 <img src={SkateboardIcon} alt='loader' />\n                </div>\n              </div>\n            </div>\n          </div>\n      </div>\n    )\n  }\n\n  // Show once user is loaded. \n  return (\n    <div className='row'>\n      <div className='top-container'>\n\n      </div>\n        <div className='l-container u-padding--none u-margin--tp-sm'>\n            <div className='u-content--center'>\n              <div className='c-card u-text--centered'>\n                <div className='c-card__content u-padding--none u-border--none'>\n                  <div className='c-card__header u-border--bottom'>\n                    <img className='u-image avatar u-image--150 u-image--rounded' src={randomUser.picture.large} alt='avatar' />\n                  </div>\n                  <div className='details-container'>\n                    <h3 className='c-card__subtitle u-margin--none'>{subtitle? subtitle : 'Hi, My name is'}</h3>\n                    <h2 className='c-card__title u-text--lg'>{details? details : randomUser.name.first + ' ' + randomUser.name.last}</h2>\n                  </div>\n                  <ul className='c-tabs l-row u-grid-justify--center u-padding--md'>\n                    <li className='c-tabs__list u-padding--sm' onMouseEnter={() => updateDetails('Hi, My name is', randomUser.name.first + ' ' + randomUser.name.last)}>\n                      <img className='u-image--24' src={UserIcon} alt='user icon' />\n                    </li>\n                    <li className='c-tabs__list u-padding--sm' onMouseEnter={() => updateDetails('My email address is', randomUser.email)}>\n                      <img className='u-image--24' src={EmailIcon} alt='email icon' />\n                    </li>\n                    <li className='c-tabs__list u-padding--sm' onMouseEnter={() => updateDetails('My birthday is', new Date(randomUser.dob.date).toLocaleDateString())}>\n                      <img className='u-image--24' src={CalendarIcon} alt='calendar icon' />\n                    </li>\n                    <li className='c-tabs__list u-padding--sm' onMouseEnter={() => updateDetails('My address is', randomUser.location.street.number + ' ' + randomUser.location.street.name)}>\n                      <img className='u-image--24' src={MapIcon} alt='map icon' />\n                    </li>\n                    <li className='c-tabs__list u-padding--sm' onMouseEnter={() => updateDetails('My phone number is', randomUser.cell)}>\n                      <img className='u-image--24' src={CallIcon} alt='call icon' />\n                    </li>\n                    <li className='c-tabs__list u-padding--sm' onMouseEnter={() => updateDetails('My password is', randomUser.login.password)}>\n                      <img className='u-image--24' src={LockIcon} alt='lock icon' />\n                    </li>\n                  </ul>\n                </div>\n              </div>\n            </div>\n        </div>\n      </div>\n  );\n};\n\n\n\nexport default UserCard;","import { GET_RANDOM_USER, APP_LAYOUT_ERROR } from './types';\nimport axios from 'axios';\n\nexport const getRandomUser = () => async dispatch => {\n  \n  try {\n    const response = await axios.get('https://randomuser.me/api/');\n\n    console.log('RandomUser: ', response.data.results[0]);\n\n    dispatch({\n            type: GET_RANDOM_USER,\n            payload: response.data.results[0]\n        })\n\n    } catch (error) {\n        dispatch({\n            type: APP_LAYOUT_ERROR,\n            payload: error\n        })\n    }\n}","import logo from './logo.svg';\nimport './App.css';\nimport UserCard from './components/userCard';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n     <UserCard />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { GET_RANDOM_USER, APP_LAYOUT_ERROR } from '../actions/types';\n\nconst initialState = {\n  randomUser: null,\n  error: null,\n  loading: true\n};\n\nconst reducer = (state = initialState, action ) => {\n  switch(action.type) {\n    case GET_RANDOM_USER:\n      return {\n        ...state,\n        randomUser: action.payload,\n        loading: false,\n      }\n    case APP_LAYOUT_ERROR:\n      console.error(action.payload);\n      return {\n        error: action.payload,\n        ...state,\n      }\n    default: \n      return state;\n  }\n};\n\n\nexport default reducer;","import { combineReducers } from 'redux';\nimport appReducer from './appReducer';\n\nexport default combineReducers({\n  app: appReducer,\n});\n","import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\n\nconst initialState = {};\nconst middleware = [thunk];\n\nconst store = createStore(\n    rootReducer,\n    initialState,\n    composeWithDevTools(applyMiddleware(...middleware)));\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport store from './store';\n\nconst Home = () => (\n  <Provider store={store}>\n    <App />\n  </Provider>\n);\nReactDOM.render(<Home />, document.getElementById('root'));\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}